#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>

#define MAX_PROFESSORES 3
#define MAX_DISCIPLINAS 2
#define MAX_ESTUDANTES 15

typedef enum {
    ESPECIALISTA,
    MESTRE,
    DOUTOR
} Titulacao;

typedef struct {
    char nome[50];
    int funcional;
    Titulacao titulacao;
} Professor;

typedef struct {
    char nome[50];
    int codigo;
    int carga_horaria;
    Professor *professor_responsavel;
    int num_estudantes;
    int estudantes[MAX_ESTUDANTES];
} Disciplina;

typedef struct {
    char nome[50];
    int matricula;
    int idade;
} Estudante;

void bubbleSort(Estudante *array, int size, int descending) {
    int i, j;
    Estudante temp;
    
    for (i = 0; i < size - 1; i++) {
        for (j = 0; j < size - i - 1; j++) {
            if ((descending && array[j].idade < array[j + 1].idade) ||
                (!descending && array[j].idade > array[j + 1].idade)) {
                temp = array[j];
                array[j] = array[j + 1];
                array[j + 1] = temp;
            }
        }
    }
}

int le_valida_idade(int idade) {
    return (idade >= 16 && idade <= 26);
}

int le_valida_titulacao(int titulacao) {
    return (titulacao >= ESPECIALISTA && titulacao <= DOUTOR);
}

int main() {
    setlocale(LC_ALL, "");
    Professor professores[MAX_PROFESSORES];
    Disciplina disciplinas[MAX_DISCIPLINAS];
    Estudante estudantes[MAX_ESTUDANTES];
    
    int i, j;
    
    for (i = 0; i < MAX_PROFESSORES; i++) {
        printf("Cadastro do Professor %d\n", i + 1);
        printf("Nome: ");
        scanf("%s", professores[i].nome);
        printf("Funcional: ");
        scanf("%d", &professores[i].funcional);
        
        int titulacao;
        do {
            printf("Titulação (0 - Especialista, 1 - Mestre, 2 - Doutor): ");
            scanf("%d", &titulacao);
        } while (!le_valida_titulacao(titulacao));
        
        professores[i].titulacao = (Titulacao)titulacao;
        
        printf("\n");
    }
    
    for (i = 0; i < MAX_DISCIPLINAS; i++) {
        printf("Cadastro da Disciplina %d\n", i + 1);
        printf("Nome: ");
        scanf("%s", disciplinas[i].nome);
        printf("Código: ");
        scanf("%d", &disciplinas[i].codigo);
        printf("Carga Horária: ");
        scanf("%d", &disciplinas[i].carga_horaria);
        
        printf("Professor Responsável:\n");
        for (j = 0; j < MAX_PROFESSORES; j++) {
            printf("%d - %s\n", j + 1, professores[j].nome);
        }
        
        int professor_index;
        do {
            printf("Escolha o número do professor responsável: ");
            scanf("%d", &professor_index);
        } while (professor_index < 1 || professor_index > MAX_PROFESSORES);
        
        disciplinas[i].professor_responsavel = &professores[professor_index - 1];
        disciplinas[i].num_estudantes = 0;
        
        printf("\n");
    }
    
    for (i = 0; i < MAX_ESTUDANTES; i++) {
        printf("Cadastro do Estudante %d\n", i + 1);
        printf("Nome: ");
        scanf("%s", estudantes[i].nome);
        printf("Matrícula: ");
        scanf("%d", &estudantes[i].matricula);
        
        do {
            printf("Idade (entre 16 e 26): ");
            scanf("%d", &estudantes[i].idade);
        } while (!le_valida_idade(estudantes[i].idade));
        
        printf("Disciplina em que está matriculado:\n");
        for (j = 0; j < MAX_DISCIPLINAS; j++) {
            printf("%d - %s\n", j + 1, disciplinas[j].nome);
        }
        
        int disciplina_index;
        do {
            printf("Escolha o número da disciplina: ");
            scanf("%d", &disciplina_index);
        } while (disciplina_index < 1 || disciplina_index > MAX_DISCIPLINAS ||
                 disciplinas[disciplina_index - 1].num_estudantes >= 10);
        
        disciplinas[disciplina_index - 1].estudantes[disciplinas[disciplina_index - 1].num_estudantes++] = i;
        
        printf("\n");
    }
    
    bubbleSort(estudantes, disciplinas[0].num_estudantes, 0);
    
    printf("Relatório dos alunos matriculados na primeira disciplina (ordenados por idade em ordem crescente):\n");
    printf("codigo_disciplina  nome_professor nome_estudante idade_estudante\n");
    for (i = 0; i < disciplinas[0].num_estudantes; i++) {
        int estudante_index = disciplinas[0].estudantes[i];
        printf("%d  %s %s %d\n", disciplinas[0].codigo, disciplinas[0].professor_responsavel->nome,
            estudantes[estudante_index].nome, estudantes[estudante_index].idade);
    }
    
    printf("\n");
    
    bubbleSort(estudantes, disciplinas[1].num_estudantes, 1);
    
    printf("Relatório dos alunos matriculados na segunda disciplina (ordenados por idade em ordem decrescente):\n");
    printf("codigo_disciplina  nome_professor nome_estudante idade_estudante\n");
    for (i = 0; i < disciplinas[1].num_estudantes; i++) {
        int estudante_index = disciplinas[1].estudantes[i];
        printf("%d  %s %s %d\n", disciplinas[1].codigo, disciplinas[1].professor_responsavel->nome,
            estudantes[estudante_index].nome, estudantes[estudante_index].idade);
    }
    
    return 0;
}
